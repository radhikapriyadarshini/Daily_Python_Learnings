name: Update README

on:
  workflow_dispatch:
    inputs:
      filename:
        description: 'Python file name (e.g., bubble_sort.py)'
        required: true
        type: string
      description:
        description: 'Description of what the code does'
        required: true
        type: string
      type:
        description: 'Type of code'
        required: true
        type: choice
        options:
        - Algorithm
        - Data Structure
        - Web Scraping
        - API
        - Machine Learning
        - Automation
        - Other

permissions:
  contents: write

jobs:
  update-readme:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Update README
      run: |
        # Get current date
        DATE=$(date '+%Y-%m-%d')
        
        # Get input values
        FILENAME="${{ github.event.inputs.filename }}"
        DESCRIPTION="${{ github.event.inputs.description }}"
        TYPE="${{ github.event.inputs.type }}"
        
        echo "Updating README with:"
        echo "File: $FILENAME"
        echo "Description: $DESCRIPTION"
        echo "Type: $TYPE"
        echo "Date: $DATE"
        
        # Create table entry
        ENTRY="| $DATE | [\`$FILENAME\`](./$FILENAME) | $DESCRIPTION | $TYPE |"
        
        # Check if README exists, if not create it
        if [ ! -f README.md ]; then
          cat > README.md << 'EOF'
# 🐍 Daily Python Learnings

Welcome to my daily Python coding journey! This repository contains various Python scripts and projects that I work on regularly.

## 📚 Code Index

| Date | File | Description | Type |
|------|------|-------------|------|
EOF
        fi
        
        # Check if table header exists
        if grep -q "| Date | File | Description | Type |" README.md; then
          # Find the line after the separator and add new entry
          awk -v entry="$ENTRY" '
          /\| Date \| File \| Description \| Type \|/ {
            print $0
            getline
            print $0
            print entry
            next
          }
          { print }
          ' README.md > README_temp.md && mv README_temp.md README.md
        else
          # Add table to existing README
          cat >> README.md << EOF

## 📚 Code Index

| Date | File | Description | Type |
|------|------|-------------|------|
$ENTRY
EOF
        fi
        
        echo "README.md updated successfully!"
        echo "New entry added: $ENTRY"
    
    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action Bot"
        git add README.md
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "📝 Add ${{ github.event.inputs.filename }} to README"
          git push
          echo "Changes committed and pushed!"
        fi
